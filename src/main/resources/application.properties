spring.application.name=TradeGuardServer

# SERVER CONFIGURATION
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${SERVER_CONTEXT_PATH:/api}

# LOGGING CONFIGURATION
logging.file.name=logs/application.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.total-size-cap=100MB
logging.logback.rollingpolicy.max-history=10
logging.logback.rollingpolicy.clean-history-on-start=true
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n

logging.level.root=INFO
logging.level.korn03.tradeguardserver=INFO
logging.level.org.springframework=WARN

# Suppress Kafka spam logs
logging.level.org.apache.kafka=warn
logging.level.kafka=warn
logging.level.org.apache.kafka.clients.producer.ProducerConfig=error
logging.level.org.apache.kafka.clients.Metadata=warn

# JPA CONFIGURATION
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
logging.level.org.hibernate.SQL=off
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=off

# DATASOURCE CONFIGURATION
spring.datasource.url=${DB_URL:jdbc:h2:mem:tradeguard}
spring.datasource.driverClassName=${DB_DRIVER_CLASS:org.h2.Driver}
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:password}
spring.jpa.database-platform=${JPA_DB_PLATFORM:org.hibernate.dialect.H2Dialect}
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}

# REDIS CONFIGURATION
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.cache.type=${CACHE_TYPE:redis}

# JWT CONFIGURATION
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# API KEYS
news.api.key=${NEWS_API_KEY}

# DEFAULT USERS
tradeguard.default.user.username=${TRADEGUARD_USER_USERNAME:user}
tradeguard.default.user.password=${TRADEGUARD_USER_PASSWORD:user1234}
tradeguard.default.admin.username=${TRADEGUARD_ADMIN_USERNAME:admin}
tradeguard.default.admin.password=${TRADEGUARD_ADMIN_PASSWORD:admin1234}
tradeguard.default.bybit.readonly.key=${TRADEGUARD_BYBIT_READONLY_KEY:}
tradeguard.default.bybit.readonly.secret=${TRADEGUARD_BYBIT_READONLY_SECRET:}
tradeguard.default.bybit.readwrite.key=${TRADEGUARD_BYBIT_READWRITE_KEY:}
tradeguard.default.bybit.readwrite.secret=${TRADEGUARD_BYBIT_READWRITE_SECRET:}

# KAFKA CONFIGURATION
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}


# Producer properties
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.retries=3

# Consumer properties
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP}
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO_OFFSET_RESET}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=korn03.tradeguardserver.model
spring.kafka.consumer.properties.spring.json.value.default.type=korn03.tradeguardserver.model.JobEvent

# Topic configuration
kafka.topic.jobs=${KAFKA_TOPIC_JOBS}
kafka.topic.job-submissions=${KAFKA_TOPIC_JOB_SUBMISSIONS}

# Actuator configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when_authorized
